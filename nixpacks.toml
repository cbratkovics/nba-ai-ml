# nixpacks.toml - Fixed with C++ runtime libraries for pandas

# Setup phase: Install Python and system dependencies
[phases.setup]
# Install Python and all required libraries
nixPkgs = [
    "python310",
    "gcc",
    "stdenv.cc.cc.lib",
    "postgresql",
    "zlib",
    "libgcc"
]

# Install phase: Create virtual environment and install packages
[phases.install]
dependsOn = ["setup"]
cmds = [
    # Create virtual environment
    "python3.10 -m venv --copies /opt/venv",
    
    # Set library path for installation
    "export LD_LIBRARY_PATH=/nix/store/*/lib:$LD_LIBRARY_PATH",
    
    # Upgrade pip and install packages
    "/opt/venv/bin/python -m pip install --upgrade pip setuptools wheel",
    "/opt/venv/bin/pip install -r requirements.txt"
]

# Runtime environment setup
[phases.runtime]
dependsOn = ["install"]
cmds = [
    # Find and set the library path for runtime
    "export LIBPATH=$(find /nix/store -name 'libstdc++.so.6' -type f | head -1 | xargs dirname)",
    "echo 'export LD_LIBRARY_PATH=$LIBPATH:$LD_LIBRARY_PATH' >> /env.sh"
]

# Start command with library path
[start]
cmd = "source /env.sh 2>/dev/null || true && LD_LIBRARY_PATH=$(find /nix/store -name 'libstdc++.so.6' -type f | head -1 | xargs dirname):$LD_LIBRARY_PATH /opt/venv/bin/python -m uvicorn api.main:app --host 0.0.0.0 --port ${PORT:-8000}"

# Environment variables
[variables]
PYTHONPATH = "/opt/venv/lib/python3.10/site-packages"
VIRTUAL_ENV = "/opt/venv"
PATH = "/opt/venv/bin:$PATH"
PYTHONUNBUFFERED = "1"
ENVIRONMENT = "production"
# Set library path to include Nix store libraries
LD_LIBRARY_PATH = "/nix/store/*/lib:/usr/lib:/lib"